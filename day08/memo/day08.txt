HTTP
	HTTP는 HTML 문서와 같은 리소스들을 가져올 수 있도록 해주는 프로토콜
	프론트엔드에서는 반드시 HTTP 요청을 보낼 수 있어야함
		서버에 요청을 보내서 응답을 받고, 그 응답을 데이터를 가공하여 보여줘야함
	Dart에서 HTTP를 직접 요청보내기
	이 때, HTTP 요청을 보내기 위해 필요한 것 두 가지
		Method
		URL

(실습)Dart에서 HTTP요청하기
	1. http 패키지 설치
		http 요청을 보내고, 응답을 받을 수 있는 다트 공식 패키지
	2. HTTP 사용할 대상의 URL 정의
	3. Method 선택(GET, POST)
	4. 요청하기
	5. 요청 받기
	6. 출력

서버(백엔드)에서는 요청을 받을 때 컨트롤이 가능함
	요청을 시작한 브라우저가 무슨 브라우저인지 확인이 가능
		어떤 브라우저에서 요청을 보냈는지 = User-Agent
	무슨 메소드의 요청을 보냈는지에 따라 응답을 다르게 줄 수 있음

Get만 사용되는 경우
	데이터를 읽거나(read) 검색(Retreive)할 때 사용되는 메서드
	주로 데이터를 읽을 때 사용됨
	
	import 'package:http/http.dart' as http;

	void main() async {
	  var url = 'https://sniperfactory.com/sfac/http_only_get';
	  var response = await http.get(Uri.parse(url));
	  print(response.statusCode); //'200'이 나오면 옳게된것
	  print(response.body);
	}

Post만 사용되는 경우
	데이터를 새로 생성(create)할 때 생성되는 메서드
	주로 데이터를 생성할 때 사용됨

	import 'package:http/http.dart' as http;

	void main() async {
	  var url = 'https://sniperfactory.com/sfac/http_only_post';
	  var response = await http.post(Uri.parse(url));
	  print(response.statusCode); //'200'이 나오면 옳게된것
	  print(response.body);
	}
