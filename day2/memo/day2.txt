Column 위젯
	세로로 위젯을 나열
	자식들을 가질 수 있는 위젯(child X, children O)
	속성: children에 데이터타입이 List<widget>인 것만 넣을 수 있음
	child: Column(
		children: [
			Text('widget: 1'),
			Text('widget: 2'),
			Icon(Icons.access_time),
		]
	)

* 위젯의 부모 만드는 단축키
	control + .

Row 위젯
	가로로 위젯을 나열
	나머지는 Column 위젯과 동일

ListTile 위젯
	구글 머티리얼디자인의 ListTile을 표현
	속성: title에는 widget 데이터만 들어갈 수 있음
	속성: subtitle에는 widget 데이터만 들어갈 수 있음
	
	ListTile(
		title: Text("아이디"),
		subtitle: Text("010-1111-2222"),
		leading: Icon(Icons.access_time)
		trailing: Icon(Icons.call)
	)

	앞 위젯 : leading
	뒤 위젯 : trailing

Padding 위젯
	자식에게 패딩(간격)을 원하는 만큼 띄울 때 사용
	속성: child에는 widget 데이터만 들어갈 수 있음
	속성: padding에는 edgeInsets 데이터만 들어갈 수 있음
	padding(
		padding: EdgeInsets.all(8),	//8을 통상적으로 사용함
		child: Text('아이디'),
	)

위젯의 속성
	위젯마다 원하는 설정을 할 수 있는 특수한 값들
	위젯마다 속성이 다름
	'일반적으로' 자식위젯 사용시 child 속성이름값을 사용
	속성마다 들어갈 수 있는 데이터 타입이 정해져 있음

SizedBox 위젯
	자식위젯에게 사용할 수 있는 공간을 정해줌
	속성: height/width에는 double, int 데이터타입 줄 수잇음
	SizedBox(
		width: 300,
		height: 300,
		child: Text('아이디'),
	)

	Column/Row의 자식들 사이에 간격을 넣고 싶을 때도 사용
	Center위젯은 본인이 가질 수 있는 최대의 너비/높이를 기준으로, 자식에게 가운데를 제공

Container 위젯(★★★)
	자식위젯에게 사용할 수 있는 공간을 정해줌
	색상넣기, 둥글게하기, 그림자 넣기 등 꾸미기 가능
	Container(
		width: 300,
		height: 300,
		child: Text('아이디')
	)

	color속성 사용 시, 데코레이션 속성이 있을 때는 '무조건' 그 안에 color을 넣어야함


플러터 폴더구조
	플러터 프로젝트 생성시 자동으로 생성되는 폴더들
	쳐다볼 필요 없는 파일: .dart_tool, .idea, 프로젝트명.iml, pubspec.lock, README.md
	빌드용으로, 서서히 알게됨: android, ios, linux, macos, web, windows, test
		빌드란 개발된 프로젝트를 실행가능한 프로그램으로 변환하는 작업
		android: 안드로이드 빌드시 꼭 필요한 빌드용 폴더(앱 제작 후 어플 설치파일(apk)등이 여기에 저장 됨)
		ios: ios 빌드시 꼭 필요한 빌드용 폴더(xcode가 직접적 소통하는 폴더)
		linux: Linux용 빌드시 꼭 필요한 빌드용 폴더
		macos: MacOS용 빌드시 꼭 필요한 빌드용 폴더
		web: Web 빌드시 꼭 필요한 빌드용 폴더
		windows: Windows용 빌드시 꼭 필요한 빌드용 폴더
		test: 유닛, 프로젝트 테스트용 폴더(플러터 고급용)
	* 각 플렛폼마다 사용하는 전용 폴더가 있고, 해당 폴더에서 빌드가 이루어짐
	★ 꼭 알아야하는 폴더: lib, pubspec.yaml
		lib: 코드/소스가 작업되는 장소(library 폴더라고 함)
		pubspec.yaml: 프로젝트가 사용하는 이미지, 폰트, 패키지 등의 자원들을 등록하는 출입사무소같은 역할

pubspec.yaml
	플러터 프로젝트 생성시 자동으로 생성되는 중요한 파일 중 하나
	프로젝트가 사용하는 이미지, 폰트, 패키지 등의 자원들을 등록하는 출입사무소같은 역할
	네트워크가 아닌 장치에 저장돼있는 이미지를 사용한다면 등록과정이 반드시 필요함
	작업할 때 다른사람의 작업물 코드(패키지)를 등록 및 설치
	결론적으로, 패키지 의존성 관리 역할

플러터의 이미지 위젯
	Image.network: 네트워크에서 이미지를 가져온다
	Image.asset: 내 저장소에서 이미지를 가져온다
	Image.memory, Image.file: 추후에 필요에 의해 학습

Image.network 위젯
	이미지의 웹주소를 사용하여 이미지 가져옴(CDN 방식으로 많이 쓰임)
	url주소는 String 데이터 타입이여야 함

Image.asset
	pubspec.yaml에 등록돼있는 이미지를 사용할 때 사용하는 위젯
	pubspec.yaml에 이미지를 등록하는 방법
		pubspec.yaml의 아래 부분을 찾아 주석을 해제함
		# assets:
			#	- images/a_dot_burr.jpeg
			#	- images/a_dot_ham.jpeg
	폴더를 만들고, 이미지 파일을 하나씩 등록
		1. pubspec.yaml에 하나씩 이미지 경로 등록
			(- images/images/스크린샷(179).png)
		2. 저장(ctrl+s)
		3. 파일명.dart에 Image.asset(이미지 경로)

Image.network VS Image.asset
	네트워크가 없는 상황 => Image.asset 사용
	인터넷을 통해 이미지를 보여줘야 하는 상황 => Image.network
	* Image.asset 사용하는 경우
		디자이너가 해준 Icon, 어플 필수 이미지(로고), 장치 내부에 있어야 로딩 빠름

ListView 위젯
	Column, Row에는 기본적으로 스크롤 기능이 없음
	scroll 기능을 넣어주는 위젯
	기본값(default)이 세로(column)로 설정
	가로로 설정 => scrollDirection: Axis.horizontal

로렘입숨
	"쓸데없는 더미 테스트"...글자가 들어갈 때 출력 형태 미리보기
	한글 로렘입숨 생성기: http://hangul.thefron.me/
	영문 로렘입숨 생성기: http://loremipsum.io/generator/?n=2&t=s
	
SingleChildScrollView 위젯
	단위 위젯의 자식에게 스크롤 기능을 만들어 줌
	하나의 위젯이 매우 클 때 사용
	속성: scrollDirection으로 ListView와 동일하게 방향을 설정
	
ListView VS SingleChildScrollView
	ListView는 children으로 다수의 위젯(List<Widget>)을 제공해야함

PageView 위젯
	한 번에 한 위젯만 보여주고, 다음 위젯은 넘겨야만 보여줄 때 사용





